services:
  postgres:
    image: postgres:13
    volumes:
      - ./pg_data/:/var/lib/postgresql/data
    env_file:
      - django_api/movies_admin/config/.env
    networks:
      - yandex_django
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  django_app:
    build:
      context: django_api/movies_admin
    volumes:
      - static/:/app/static/
    env_file:
      - django_api/movies_admin/config/.env
    networks:
      - yandex_django
    depends_on:
        postgres:
          condition: service_healthy

  nginx:
    image: nginx:latest
    volumes:
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./etc/nginx/conf.d:/etc/nginx/conf.d:ro
      - static/:/opt/app/static/
    depends_on:
      - django_app
    networks:
      - yandex_django
    ports:
      - "80:80"

  elasticsearch:
    image: elasticsearch:8.5.3
    environment:
      discovery.type: "single-node"
      ES_JAVA_OPTS: -Xms1g -Xmx1g
      xpack.security.enabled: "false"
      USE_SSL: "false"
    ports:
      - "9200:9200"
    networks:
      - yandex_django
    volumes:
      - ../elastic_data:/usr/share/elasticsearch/data
    depends_on:
      postgres:
        condition: service_healthy

  redis:
    image: redis:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - yandex_django
    volumes:
      - ../redis_data:/data
    ports:
      - "6379:6379"

  etl:
    build:
      context: etl
    restart: always
    env_file:
      - etl/.env
    networks:
      - yandex_django
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      elasticsearch:
        condition: service_started
#    command:
#      - python main.py

volumes:
  static:

networks:
    yandex_django:
